<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="co.com.ceiba.airport.infraestructure.FlightQueryControllerTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2020-12-23T14:16:31" hostname="LUIS-MONTES" time="0.063">
  <properties/>
  <testcase name="getAllTest()" classname="co.com.ceiba.airport.infraestructure.FlightQueryControllerTest" time="0.031"/>
  <testcase name="getFlightByIdTest()" classname="co.com.ceiba.airport.infraestructure.FlightQueryControllerTest" time="0.03"/>
  <system-out><![CDATA[2020-12-23 09:16:31.924  INFO 18304 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [co.com.ceiba.airport.infraestructure.FlightQueryControllerTest], using SpringBootContextLoader
2020-12-23 09:16:31.926  INFO 18304 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [co.com.ceiba.airport.infraestructure.FlightQueryControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-12-23 09:16:31.927  INFO 18304 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [co.com.ceiba.airport.infraestructure.FlightQueryControllerTest]: FlightQueryControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-12-23 09:16:31.931  INFO 18304 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration co.com.ceiba.airport.AirportApplication for test class co.com.ceiba.airport.infraestructure.FlightQueryControllerTest
2020-12-23 09:16:31.934  INFO 18304 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-12-23 09:16:31.935  INFO 18304 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@59949d3c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1139f414, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@17d37753, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@45efcbbe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@386fc342, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6628190f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6a4d9376, org.springframework.test.context.event.EventPublishingTestExecutionListener@51c417ba, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1777bb13, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@31b12893, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3761cbf0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@46696361, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6cecf79c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5421af22]

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /flight/getAll
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = co.com.ceiba.airport.infrastructure.controller.FlightQueryController
           Method = co.com.ceiba.airport.infrastructure.controller.FlightQueryController#getAll()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = [{"id":"London-1608404400","time":1608404400,"arrival":"London","cost":181.03,"reprogrammed":false},{"id":"Madird-1608414400","time":1608416400,"arrival":"Madrid","cost":181.03,"reprogrammed":true},{"id":"Medellin-1608320500","time":1608320500,"arrival":"Medellin","cost":181.03,"reprogrammed":false},{"id":"Barcelona-1608417400","time":1608417400,"arrival":"Barcelona","cost":199.133,"reprogrammed":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /flight/getFlightById/Medellin-1608320500
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = co.com.ceiba.airport.infrastructure.controller.FlightQueryController
           Method = co.com.ceiba.airport.infrastructure.controller.FlightQueryController#getFlightById(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"id":"Medellin-1608320500","time":1608320500,"arrival":"Medellin","cost":181.03,"reprogrammed":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
